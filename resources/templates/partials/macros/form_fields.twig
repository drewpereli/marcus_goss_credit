
{% macro text(p) %}
	{% set extra_class = "" %}
	{% if p.type == 'hidden' %}
		{% set extra_class = "display-none" %}
	{% endif %}
	<div class="form-group {{extra_class}}">
		<label for="{{ p.name }}">
			{{ p.label|default(p.name|replace({"_": " "})|title) }}
		</label>
		<input
			id="{{ p.id|default(p.name) }}"
			name="{{ p.name }}"
			type="{{ p.type|default('text') }}"
			class="form-control {{p.required}} {{p.classes}}"
			{% if p.value %}
				value="{{ p.value }}"
			{% endif %}
			{% if p.required %}
				required="true"
			{% endif %}
			{% if p.title %}
				title="{{p.title}}"
			{% endif %}
			{% if p.maxlength %}
				maxlength="{{p.maxlength}}"
			{% endif %}
		/>
	</div>
{% endmacro %}

{% macro textarea(p) %}
	<div class="form-group">
		<label for="{{ p.name }}">
			{{ p.label|default(p.name|replace({"_": " "})|title) }}
		</label>
		<textarea
			id="{{ p.id|default(p.name) }}"
			name="{{ p.name }}"
			class="form-control {{p.required}} {{p.classes}}"
			value="{{ p.value|default('') }}"
			rows="5"
			{% if p.required %}
				required="true"
			{% endif %}
			{% if p.title %}
				title="{{p.title}}"
			{% endif %}
		></textarea>
	</div>
{% endmacro %}

{% macro password() %}
	{% import _self as field %}
	{{ field.text({name:"password", type:"password", classes:"pwstrength"}) }}
	<div class="password-criteria-checklist">
		<ul>
			<li class="min_length text-danger">
				<span class="checked">&#10008;</span> At least 8 characters long.
			</li>
			<li class="lowercase_letter text-danger">
				<span class="checked">&#10008;</span> Must contain at least one lowercase letter.
			</li>
			<li class="uppercase_letter text-danger">
				<span class="checked">&#10008;</span> Must contain at least one uppercase letter.
			</li>
			<li class="number text-danger">
				<span class="checked">&#10008;</span> Must contain at least one number.
			</li>
		</ul>
	</div>
	<script>
		$("#password").keyup(function(){
			var val = $(this).val();
			var markAsValid = function(liElement){
				$(liElement)
					.removeClass("text-danger")
					.addClass("text-success")
					.find(".checked")
					.html("&#10004;");
			}
			var markAsInvalid = function(liElement){
				$(liElement)
					.addClass("text-danger")
					.removeClass("text-success")
					.find(".checked")
					.html("&#10008;");
			}
			//Check length
			if (val.length >= 8)
				markAsValid($(".min_length"));
			else
				markAsInvalid($(".min_length"));
			//Check for lowercase letter
			if (val.match(/[a-z]+/))
				markAsValid($(".lowercase_letter"));
			else
				markAsInvalid($(".lowercase_letter"));
			//Check for uppercase letter
			if (val.match(/[A-Z]+/))
				markAsValid($(".uppercase_letter"));
			else
				markAsInvalid($(".uppercase_letter"));
			//Check for number
			if (val.match(/[0-9]+/))
				markAsValid($(".number"));
			else
				markAsInvalid($(".number"));
		});
	</script>
{% endmacro %}

{% macro password_confirmation() %}
	{% import _self as field %}
	{{ field.text({name:"password_confirmation", type:"password", classes:"password_confirmation"}) }}
{% endmacro %}


{% macro passwords() %}
	{% import _self as field %}
	{{ field.password() }}
	{{ field.password_confirmation() }}
{% endmacro %}



{% macro select(p) %}
	{% import _self as field %}
	<div class="form-group">
		<label for="{{ name }}">{{ p.name|replace({"_": " "})|title }}</label><br/>
		<select 
			id="{{ p.name }}" 
			name="{{ p.name }}" 
			class="form-control {% if p.required %}required{% endif %}"
			{% if p.required %}
				required="true"
			{% endif %}
		>
			{% for value in p.values %}
				{{ field.option(value) }}
			{% endfor %}
		</select>
	</div>
{% endmacro %}

{% macro option(value) %}
	<option value="{{ value }}">{{ value|replace({"_": " "})|title }}</option>
{% endmacro %}


{% macro state(p) %}
	<div class="form-group">
		<label for="{{ p.name }}">{{ p.name|replace({"_": " "})|title }}</label><br/>
		<select 
			id="{{ p.name }}" 
			name="{{ p.name }}" 
			class="form-control {% if p.required %}required{% endif %}"
			{% if required %}
				required="true"
			{% endif %}
		/>
			<option value="AL">Alabama</option>
			<option value="AK">Alaska</option>
			<option value="AZ">Arizona</option>
			<option value="AR">Arkansas</option>
			<option value="CA">California</option>
			<option value="CO">Colorado</option>
			<option value="CT">Connecticut</option>
			<option value="DE">Delaware</option>
			<option value="DC">District Of Columbia</option>
			<option value="FL">Florida</option>
			<option value="GA">Georgia</option>
			<option value="HI">Hawaii</option>
			<option value="ID">Idaho</option>
			<option value="IL">Illinois</option>
			<option value="IN">Indiana</option>
			<option value="IA">Iowa</option>
			<option value="KS">Kansas</option>
			<option value="KY">Kentucky</option>
			<option value="LA">Louisiana</option>
			<option value="ME">Maine</option>
			<option value="MD">Maryland</option>
			<option value="MA">Massachusetts</option>
			<option value="MI">Michigan</option>
			<option value="MN">Minnesota</option>
			<option value="MS">Mississippi</option>
			<option value="MO">Missouri</option>
			<option value="MT">Montana</option>
			<option value="NE">Nebraska</option>
			<option value="NV">Nevada</option>
			<option value="NH">New Hampshire</option>
			<option value="NJ">New Jersey</option>
			<option value="NM">New Mexico</option>
			<option value="NY">New York</option>
			<option value="NC">North Carolina</option>
			<option value="ND">North Dakota</option>
			<option value="OH">Ohio</option>
			<option value="OK">Oklahoma</option>
			<option value="OR">Oregon</option>
			<option value="PA">Pennsylvania</option>
			<option value="RI">Rhode Island</option>
			<option value="SC">South Carolina</option>
			<option value="SD">South Dakota</option>
			<option value="TN">Tennessee</option>
			<option value="TX">Texas</option>
			<option value="UT">Utah</option>
			<option value="VT">Vermont</option>
			<option value="VA">Virginia</option>
			<option value="WA">Washington</option>
			<option value="WV">West Virginia</option>
			<option value="WI">Wisconsin</option>
			<option value="WY">Wyoming</option>
		</select>
	</div>
{% endmacro %}

{% macro zip(p) %}
	{% import _self as field %}
	{{ field.text({name: p.name, type: "number", classes: "zip-code-input", maxlength: "4"}) }}
{% endmacro %}


{% macro submit(text="Submit") %}
	<input type="submit" value="{{ text }}" name="submit_btn" class="btn btn-primary" />
{% endmacro %}

{% macro stripe(amount, public_key) %}
	<div class="form-group">
		<label for="stripe-card-number">
			Credit or debit card number
		</label>
		<div id="stripe-card-number" class="stripe-element form-control">
		</div>
	</div>
	<div class="form-group">
		<label for="stripe-card-expiry">
			Expiration Date
		</label>
		<div id="stripe-card-expiry" class="stripe-element form-control">
		</div>
	</div>
	<div class="form-group">
		<label for="stripe-card-cvc">
			CVC
		</label>
		<div id="stripe-card-cvc" class="stripe-element form-control">
		</div>
	</div>
	<div class="form-group">
		<label for="stripe-card-zip">
			Zip Code
		</label>
		<div id="stripe-card-zip" class="stripe-element form-control">
		</div>
	</div>
	<div id="stripe-card-errors"></div>
	<div class="form-group">
		<label>Amount</label>
		<div>${{ amount|number_format(2) }}</div>
	</div>
	<script>
		$(function(){
			//Create a Stripe client
			var stripe = Stripe('{{ public_key }}');

			// Create an instance of Elements
			var elements = stripe.elements();

			// Custom styling can be passed to options when creating an Element.
			// (Note that this demo uses a wider set of styles than the guide below.)
			var style = {
			  base: {
			    color: '#666',
			    lineHeight: '1.846',
			    //fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
			    //fontSmoothing: 'antialiased',
			    //fontSize: '16px',
			    '::placeholder': {
			      color: '#aab7c4'
			    }
			  },
			  invalid: {
			    color: '#fa755a',
			    iconColor: '#fa755a'
			  }
			};

			// Create an instance of the card Element
			var number = elements.create('cardNumber', {style: style});
			var expiry = elements.create('cardExpiry', {style: style});
			var cvc = elements.create('cardCvc', {style: style});
			var zip = elements.create('postalCode', {style: style});

			// Add an instance of the card Element into the `card-element` <div>
			number.mount('#stripe-card-number');
			expiry.mount('#stripe-card-expiry');
			cvc.mount('#stripe-card-cvc');
			zip.mount('#stripe-card-zip');

			var elements = [number, expiry, cvc, zip];

			// Handle real-time validation errors from the card Element.
			for (var i in elements){
				var element = elements[i];
				element.addEventListener('change', function(event) {
				  var displayError = document.getElementById('stripe-card-errors');
				  if (event.error) {
				    displayError.textContent = event.error.message;
				  } else {
				    displayError.textContent = '';
				  }
				});
			}

			// Handle form submission
			var form = $("#stripe-card-number").closest("form")[0];
			form.addEventListener('submit', function(event) {
			  event.preventDefault();

			  stripe.createToken(number).then(function(result) {
			    if (result.error) {
			      // Inform the user if there was an error
			      var errorElement = document.getElementById('stripe-card-errors');
			      errorElement.textContent = result.error.message;
			    } else {
			      // Send the token to your server
			      stripeTokenHandler(result.token);
			    }
			  });
			});

			function stripeTokenHandler(token) {
			  // Insert the token ID into the form so it gets submitted to the server
			  var form = $("#stripe-card-number").closest("form")[0];
			  var hiddenInput = document.createElement('input');
			  hiddenInput.setAttribute('type', 'hidden');
			  hiddenInput.setAttribute('name', 'stripeToken');
			  hiddenInput.setAttribute('value', token.id);
			  form.appendChild(hiddenInput);

			  // Submit the form
			  form.submit();
			}
		});
	</script>
{% endmacro %}


{% macro contact_info(p) %}
	{% import _self as field %}
	{% if p.name|length != 0 %}
		{% set name = p.name ~ "_" %}
	{% endif %}
	{{ field.text({name:"#{name}name", value:"#{p.user.first_name} #{p.user.last_name}"}) }}
	{{ field.text({name:"#{name}street_address"}) }}
	{{ field.text({name:"#{name}city"}) }}
	{% if p.include_county %}
		{{ field.text({name:"#{name}county"}) }}
	{% endif %}
	{{ field.state({name:"#{name}state"}) }}
	{{ field.zip({name:"#{name}zip"}) }}
{% endmacro %}






{% macro textOLD(name, required=true, type="text", label=false) %}
	<div class="form-group">
		<label for="{{ name }}">
			{% if label %}
				{{ label }}
			{% else %}
				{{ name|replace({"_": " "})|title }}
			{% endif %}
		</label>
		<input
			id="{{ name }}"
			name="{{ name }}"
			type="{{ type }}"
			class="form-control {% if required %}required{% endif %}"
			{% if required %}
				required="true"
			{% endif %}
		/>
	</div>
{% endmacro %}














